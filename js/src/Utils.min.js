var Util={arrayMax:arr=>Math.max(...arr),arrayMin:arr=>Math.min(...arr),chunk:(arr,size)=>Array.from({length:Math.ceil(arr.length/size)},(v,i)=>arr.slice(i*size,i*size+size)),compact:arr=>arr.filter(Boolean),countOccurrences:(arr,value)=>arr.reduce((a,v)=>v===value?a+1:a+0,0),difference:(a,b)=>{const s=new Set(b);return a.filter(x=>!s.has(x))},distinctValuesOfArray:arr=>[...new Set(arr)],dropElements:(arr,func)=>{while(arr.length>0&&!func(arr[0]))arr.shift();return arr},everyNth:(arr,nth)=>arr.filter((e,i)=>i%nth===0),filterNonUnique:arr=>arr.filter(i=>arr.indexOf(i)===arr.lastIndexOf(i)),flatten:arr=>arr.reduce((a,v)=>a.concat(v),[]),head:arr=>arr[0],initial:arr=>arr.slice(0,-1),initializeArrayWithRange:(end,start=0)=>Array.from({length:end-start}).map((v,i)=>i+start),initializeArrayWithValues:(n,value=0)=>Array(n).fill(value),intersection:(a,b)=>{const s=new Set(b);return a.filter(x=>s.has(x))},last:arr=>arr[arr.length-1],mapObject:(arr,fn)=>(a=>(a=[arr,arr.map(fn)],a[0].reduce((acc,val,ind)=>(acc[val]=a[1][ind],acc),{})))(),nthElement:(arr,n=0)=>(n>0?arr.slice(n,n+1):arr.slice(n))[0],pick:(obj,arr)=>arr.reduce((acc,curr)=>(curr in obj&&(acc[curr]=obj[curr]),acc),{}),pull:(arr,...args)=>{let pulled=arr.filter((v,i)=>!args.includes(v));arr.length=0;pulled.forEach(v=>arr.push(v))},remove:(arr,func)=>Array.isArray(arr)?arr.filter(func).reduce((acc,val)=>{arr.splice(arr.indexOf(val),1);return acc.concat(val)},[]):[],sample:arr=>arr[Math.floor(Math.random()*arr.length)],shuffle:arr=>arr.sort(()=>Math.random()-0.5),similarity:(arr,values)=>arr.filter(v=>values.includes(v)),symmetricDifference:(a,b)=>{const sA=new Set(a),sB=new Set(b);return[...a.filter(x=>!sB.has(x)),...b.filter(x=>!sA.has(x))]},tail:arr=>arr.length>1?arr.slice(1):arr,take:(arr,n=1)=>arr.slice(0,n),takeRight:(arr,n=1)=>arr.slice(arr.length-n,arr.length),union:(a,b)=>Array.from(new Set([...a,...b])),without:(arr,...args)=>arr.filter(v=>!args.includes(v)),zip:(...arrays)=>{const maxLength=Math.max(...arrays.map(x=>x.length));return Array.from({length:maxLength}).map((_,i)=>{return Array.from({length:arrays.length},(_,k)=>arrays[k][i])})},removeArrayItem:function(arr,item){var i=0;while(i<arr.length){if(arr[i]==item){arr.splice(i,1)}else{i++}}return arr},contains:function(arr,item){var i=arr.length;while(i--){if(arr[i]===item){return true}}return false},bottomVisible:()=>document.documentElement.clientHeight+window.scrollY>=document.documentElement.scrollHeight||document.documentElement.clientHeight,currentURL:()=>window.location.href,elementIsVisibleInViewport:(el,partiallyVisible=false)=>{const{top,left,bottom,right}=el.getBoundingClientRect();return partiallyVisible?((top>0&&top<innerHeight)||(bottom>0&&bottom<innerHeight))&&((left>0&&left<innerWidth)||(right>0&&right<innerWidth)):top>=0&&left>=0&&bottom<=innerHeight&&right<=innerWidth},getScrollPosition:(el=window)=>({x:(el.pageXOffset!==undefined)?el.pageXOffset:el.scrollLeft,y:(el.pageYOffset!==undefined)?el.pageYOffset:el.scrollTop}),getURLParameters:url=>url.match(/([^?=&]+)(=([^&]*))/g).reduce((a,v)=>(a[v.slice(0,v.indexOf("="))]=v.slice(v.indexOf("=")+1),a),{}),redirect:(url,asLink=true)=>asLink?window.location.href=url:window.location.replace(url),scrolllToTop:()=>{const c=document.documentElement.scrollTop||document.body.scrollTop;if(c>0){window.requestAnimationFrame(scrollToTop);window.scrollTo(0,c-c/8)}},ISODateString:(date)=>{pad=(n)=>n<10?"0"+n:n;return date.getUTCFullYear()+"-"+pad(date.getUTCMonth()+1)+"-"+pad(date.getUTCDate())+"T"+pad(date.getUTCHours())+":"+pad(date.getUTCMinutes())+":"+pad(date.getUTCSeconds())+"Z"},getDayDiffBetweenDates:(dateInitial,dateFinal)=>(dateFinal-dateInitial)/(1000*3600*24),JSONToDate:arr=>{const date=new Date(parseInt(arr.toString().substr(6)));return`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`},toEnglishDate:(time)=>{try{return new Date(time).toISOString().split("T")[0].replace(/-/g,"/")}catch(e){return}},chainAsync:fns=>{let curr=0;const next=()=>fns[curr++](next);next()},compose:(...fns)=>fns.reduce((f,g)=>(...args)=>f(g(...args))),curry:function(fn){var args=Array.prototype.slice.call(arguments,1);return function(){var innerArgs=Array.prototype.slice.call(arguments);var finalArgs=args.concat(innerArgs);return fn.apply(null,finalArgs)}},functionName:fn=>(console.debug(fn,name),fn),pipeFunctions:(...fns)=>fns.reduce((f,g)=>(...args)=>g(f(...args))),promisify:func=>(...args)=>new Promise((resolve,reject)=>func(...args,(err,result)=>err?reject(err):resolve(result))),runPromisesInSeries:ps=>ps.reduce((p,next)=>p.then(next),Promise.resolve()),sleep:ms=>new Promise(resolve=>setTimeout(resolve,ms)),generateRandom:(lowerValue,upperValue)=>{var chioces=upperValue-lowerValue+1;return Math.floor(Math.random()*chioces+lowerValue)},arrayAverage:arr=>arr.reduce((acc,val)=>acc+val,0)/arr.length,arraySum:arr=>arr.reduce((acc,val)=>acc+val,0),collatz:n=>(n%2==0)?(n/2):(3*n+1),digitize:n=>[...""+n].map(i=>parseInt(i)),distance:(x0,y0,x1,y1)=>Math.hypot(x1-x0,y1-y0),fibonacci:n=>Array(n).fill(0).reduce((acc,val,i)=>acc.concat(i>1?acc[i-1]+acc[i-2]:i),[]),gcd:(a,b)=>{let x=a,y=b;_gcd=(_x,_y)=>!_y?_x:_gcd(_y,_x%_y);return _gcd(a,b)},hammingDistance:(num1,num2)=>((num1^num2).toString(2).match(/1/g)||"").length,isDivisible:(dividend,divisor)=>dividend%divisor===0,isEven:num=>num%2===0,lcm:(x,y)=>{const gcd=(x,y)=>!y?x:gcd(y,x%y);return Math.abs(x*y)/(gcd(x,y))},median:arr=>{const mid=Math.floor(arr.length/2),nums=arr.sort((a,b)=>a-b);return arr.length%2!==0?nums[mid]:(nums[mid-1]+nums[mid])/2},palindrome:str=>{const s=str.toLowerCase().replace(/[\W]/g,"");return s===s.split("").reverse().join("")},percentile:(arr,val)=>100*arr.reduce((acc,v)=>acc+(v<val?1:0)+(v===val?0.5:0),0)/arr.length,powerset:arr=>arr.reduce((a,v)=>a.concat(a.map(r=>[v].concat(r))),[[]]),randomIntegerInRange:(min,max)=>Math.floor(Math.random()*(max-min+1))+min,randomNumberInRange:(min,max)=>Math.random()*(max-min)+min,round:(n,decimals=0)=>Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`),speechSynthesis:message=>{const msg=new SpeechSynthesisUtterance(message);msg.voice=window.speechSynthesis.getVoices()[0];window.speechSynthesis.speak(msg)},hasClass:function(node,className){if(node.className){return node.className.match(new RegExp('(\\s|^)'+className+'(\\s|$)'))}else{return false}},cleanObj:(obj,keysToKeep=[],childIndicator)=>{let o=obj,k=keysToKeep,c=childIndicator;_cleanObj=(_obj,_keysToKeep=[],_childIndicator)=>{Object.keys(_obj).forEach(key=>{if(key===_childIndicator){_cleanObj(_obj[key],_keysToKeep,_childIndicator)}else if(!_keysToKeep.includes(key)){delete _obj[key]}})}return _cleanObj(o,k,c)},objectFromPairs:arr=>arr.reduce((a,v)=>(a[v[0]]=v[1],a),{}),objectToPairs:obj=>Object.keys(obj).map(k=>[k,obj[k]]),shallowClone:obj=>Object.assign({},obj),truthCheckCollection:(collection,pre)=>(collection.every(obj=>obj[pre])),trim:function(str){return str.replace(/^\s+|\s+$/g,"")},ltrim:function(str){return str.replace(/^\s+/,"")},rtrim:function(val){return val.replace(/\s+$/,"")},truncate:function(str,len){if(str.length>len){str=str.substring(0,len)}return str},onlyLetters:function(str){return str.toLowerCase().replace(/[^a-z]/g,"")},onlyLettersNums:function(str){return str.toLowerCase().replace(/[^a-z,0-9]/g,"")},anagrams:str=>{_anagrams=_str=>{if(_str.length<=2){return _str.length===2?[_str,_str[1]+_str[0]]:[_str]}return _str.split("").reduce((acc,letter,i)=>acc.concat(_anagrams(_str.slice(0,i)+_str.slice(i+1)).map(val=>letter+val)),[])}s=str;return _anagrams(s)},capitalize:([first,...rest],lowerRest=false)=>first.toUpperCase()+(lowerRest?rest.join("").toLowerCase():rest.join("")),capitalizeEveryWord:str=>str.replace(/\b[a-z]/g,char=>char.toUpperCase()),escapeRegExp:str=>str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),fromCamelCase:(str,separator="_")=>str.replace(/([a-z\d])([A-Z])/g,'$1'+separator+'$2').replace(/([A-Z]+)([A-Z][a-z\d]+)/g,'$1'+separator+'$2').toLowerCase(),reverseString:str=>[...str].reverse().join(""),sortCharactersInString:str=>str.split("").sort((a,b)=>a.localeCompare(b)).join(""),toCamelCase:str=>str.replace(/^([A-Z])|[\s-_]+(\w)/g,(match,p1,p2,offset)=>p2?p2.toUpperCase():p1.toLowerCase()),truncateString:(str,num)=>str.length>num?str.slice(0,num>3?num-3:num)+"...":str,isNumber:function(value){return!isNaN(parseFloat(value))&&isFinite(value)},isArray:function(value){return Object.prototype.toString.call(value)=="[object Array]"},isFunction:function(value){return Object.prototype.toString.call(value)=="[object Function]"},isRegExp:function(value){return Object.prototype.toString.call(value)=="[object RegExp]"},isString:str=>Object.prototype.toString.call(str)=="[object String]",isBoolean:val=>Object.prototype.toString.call(val)=="[object Boolean]",isSymbol:val=>Object.prototype.toString.call(val)=="[object Symbol]",maxNum:arr=>Math.max.apply(Math,arr),minNum:arr=>Math.max.apply(Math,arr),coalesce:(...args)=>args.find(_=>![undefined,null].includes(_)),coalesceFactory:valid=>(...args)=>args.find(valid),extendHex:shortHex=>{_extendHex=_shortHex=>(_shortHex.length<=4)?"#"+_shortHex.slice(_shortHex.startsWith("#")?1:0).split("").map(x=>x+x).join(""):shortHex;let _shortHex=shortHex;return _extendHex(_shortHex)},gettype:v=>v===undefined?"undefined":v===null?"null":v.constructor.name.toLowerCase(),hexToRGB:hex=>{const extendHex=shortHex=>"#"+shortHex.slice(shortHex.startsWith("#")?1:0).split("").map(x=>x+x).join("");const extendedHex=hex.slice(hex.startsWith("#")?1:0).length===3?extendHex(hex):hex;return`rgb(${parseInt(extendedHex.slice(1),16)>>16},${(parseInt(extendedHex.slice(1),16)&0x00ff00)>>8},${parseInt(extendedHex.slice(1),16)&0x0000ff})`},RGBToHex:(r,g,b)=>((r<<16)+(g<<8)+b).toString(16).padStart(6,"0"),timeTaken:callback=>{console.time("timeTaken");const r=callback();console.timeEnd("timeTaken");return r},toOridinalSuffix:num=>{const int=parseInt(num),digits=[(int%10)],ordinals=["st","nd","rd","th"],oPattern=[1,2,3,4],tPattern=[11,12,13,14,15,16,17,18,19];return oPattern.includes(digits[0])&&!tPattern.includes(digits[1])?int+ordinals[digits[0]-1]:int+ordinals[3]},UUIDGenerator:()=>([1e7]+ -1e3+ -4e3+ -8e3+ -1e11).replace(/[018]/g,c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15>>c/4).toString(16)),validateEmail:str=>/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(str),};